# Generated by Django 5.0.4 on 2024-05-04 16:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('genre', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='books/documents/')),
            ],
        ),
        migrations.CreateModel(
            name='ReadingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_lists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReadingListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books_app.book')),
                ('reading_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books_app.readinglist')),
            ],
            options={
                'unique_together': {('book', 'reading_list')},
            },
        ),
        migrations.AddField(
            model_name='readinglist',
            name='books',
            field=models.ManyToManyField(related_name='reading_lists', through='books_app.ReadingListItem', to='books_app.book'),
        ),
    ]
